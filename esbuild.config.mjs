import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import fs from 'fs';
import * as sass from 'sass';

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const copyMinifiedCSS = {
	name: 'minify-css',
	setup: (build) => {
		// Handle SCSS imports
        build.onLoad({ filter: /\.scss$/ }, async (args) => {
            const {css} = sass.compile(args.path);
            fs.writeFileSync('styles.css', css, {encoding: 'utf-8'});
            return {
                contents: '', // Return empty JS content
                loader: 'js'
            };
        });
	}
}

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",
	minify: prod,
	plugins: [copyMinifiedCSS]
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}
